@startuml

title __INTERNAL's Class Diagram__\n

  package agent {
    package agent.internal {
      abstract class AndroidAgent {
          + AndroidAgent()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class AndroidAppAgent {
          + AndroidAppAgent()
          + goTo()
          + goToHome()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class AndroidWebAgent {
          + AndroidWebAgent()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class DesktopWebAgent {
          + DesktopWebAgent()
      }
    }
  }
  

  package agent {
    package agent.internal {
      interface IDriverActions {
          {abstract} + getMobileDriver()
          {abstract} + getWaiter()
          {abstract} + getWebDriver()
          {abstract} + quit()
      }
    }
  }
  

  package agent {
    package agent.internal {
      abstract class IOSAgent {
          + IOSAgent()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class IOSAppAgent {
          ~ driver : AppiumDriver<MobileElement>
          + IOSAppAgent()
          + goTo()
          + goToHome()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class IOSWebAgent {
          ~ driver : AppiumDriver<MobileElement>
          + IOSWebAgent()
      }
    }
  }
  

  package agent {
    package agent.internal {
      interface IWindowActions {
          {abstract} + takeSnapShot()
          {abstract} + swipeUp()
          {abstract} + swipeUp()
          {abstract} + swipeDown()
          {abstract} + swipeDown()
          {abstract} + goTo()
          {abstract} + goBack()
          {abstract} + switchToNativeView()
          {abstract} + switchToWebView()
          {abstract} + switchToNewWindow()
          {abstract} + switchToMainWindow()
          {abstract} + acceptAlert()
          {abstract} + scrollUp()
          {abstract} + scrollUp()
          {abstract} + scrollDown()
          {abstract} + scrollDown()
          {abstract} + swipeDownTillElement()
          {abstract} + assertPageLoad()
          {abstract} + switchToIFrame()
          {abstract} + switchToDefaultFrame()
      }
    }
  }
  

  package agent {
    package agent.internal {
      abstract class MobileAgent {
          - driver : AppiumDriver<MobileElement>
          - swipeWait : Long
          - swipeTopFraction : Float
          - swipeDownFraction : Float
          + MobileAgent()
          + getMobileDriver()
          + takeSnapShot()
          # isWebView()
          # isNativeView()
          - validateSwipeSupport()
          # validateScrollSupport()
          - switchToView()
          + switchToNativeView()
          + switchToWebView()
          - swipe()
          + swipeUp()
          + swipeUp()
          + swipeDown()
          + swipeDown()
          + scrollUp()
          + scrollDown()
          + swipeDownTillElement()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class MobileAgentFactory {
          {static} - logger : Logger
          {static} + createAgent()
          {static} - throwWrongPlatformException()
          {static} - initCaps()
          {static} - populateAppDetails()
          {static} - populatePlatformSpecificCaps()
          {static} + getProperty()
      }
    }
  }
  

  package agent {
    package agent.internal {
      abstract class WebAgent {
          {static} # logger : Logger
          - driver : WebDriver
          - wait : WebDriverWait
          - screenShotsDir : String
          - screenDateFormat : String
          - snapshotsEnabled : boolean
          - alwaysTakeSnapshot : boolean
          - scrollPixelCount : int
          + WebAgent()
          # configureImplicitWait()
          # createWaiter()
          # getPlatform()
          # getConfig()
          # getScreenShotsDir()
          # shouldAlwaysTakeSnapShot()
          + getWebDriver()
          + getWaiter()
          # throwAgentException()
          # throwAgentException()
          # throwActionException()
          # throwActionException()
          # throwUnsupportedActionException()
          + takeConditionalSnapShot()
          + takeSnapShot()
          + goTo()
          + goBack()
          + switchToNewWindow()
          + switchToMainWindow()
          + acceptAlert()
          - scroll()
          + scrollDown()
          + scrollDown()
          + scrollUp()
          + scrollUp()
          # isWebView()
          + assertPageLoad()
          + getMobileDriver()
          + quit()
          + swipeUp()
          + swipeUp()
          + swipeDown()
          + swipeDown()
          + switchToNativeView()
          + switchToWebView()
          + swipeDownTillElement()
          + switchToIFrame()
          + switchToDefaultFrame()
      }
    }
  }
  

  package agent {
    package agent.internal {
      class WebAgentFactory {
          {static} ~ driver : WebDriver
          {static} + createAgent()
          {static} - initDriver()
          {static} - setPropertyByOS()
          {static} + getOS()
          {static} + getProperty()
      }
    }
  }
  

  AndroidAgent -up-|> MobileAgent
  AndroidAppAgent -up-|> AndroidAgent
  AndroidWebAgent -up-|> AndroidAgent
  DesktopWebAgent -up-|> WebAgent
  IOSAgent -up-|> MobileAgent
  IOSAppAgent -up-|> IOSAgent
  IOSWebAgent -up-|> IOSAgent
  MobileAgent -up-|> WebAgent
  WebAgent -up-|> IAgent
  WebAgent o-- Configuration : config


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
