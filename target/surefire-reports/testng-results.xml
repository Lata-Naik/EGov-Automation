<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="31188" started-at="2019-01-04T06:36:39Z" finished-at="2019-01-04T06:37:11Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="31188" started-at="2019-01-04T06:36:39Z" finished-at="2019-01-04T06:37:11Z">
      <class name="testcore.scenarios.TLFlows">
        <test-method status="PASS" signature="runOncePerSuite()[pri:0, instance:testcore.scenarios.TLFlows@180bc464]" name="runOncePerSuite" is-config="true" duration-ms="162" started-at="2019-01-04T06:36:39Z" finished-at="2019-01-04T06:36:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runOncePerSuite -->
        <test-method status="PASS" signature="runOncePerContext(org.testng.ITestContext)[pri:0, instance:testcore.scenarios.TLFlows@180bc464]" name="runOncePerContext" is-config="true" duration-ms="12" started-at="2019-01-04T06:36:39Z" finished-at="2019-01-04T06:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@27912e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runOncePerContext -->
        <test-method status="PASS" signature="runOncePerClass(org.testng.ITestContext)[pri:0, instance:testcore.scenarios.TLFlows@180bc464]" name="runOncePerClass" is-config="true" duration-ms="0" started-at="2019-01-04T06:36:39Z" finished-at="2019-01-04T06:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@27912e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runOncePerClass -->
        <test-method status="PASS" signature="runOncePerMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:testcore.scenarios.TLFlows@180bc464]" name="runOncePerMethod" is-config="true" duration-ms="1764" started-at="2019-01-04T06:36:39Z" finished-at="2019-01-04T06:36:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@27912e3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcore.scenarios.TLFlows.approveTradeLicenseApprover() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runOncePerMethod -->
        <test-method status="FAIL" signature="approveTradeLicenseApprover()[pri:0, instance:testcore.scenarios.TLFlows@180bc464]" name="approveTradeLicenseApprover" duration-ms="29180" started-at="2019-01-04T06:36:41Z" finished-at="2019-01-04T06:37:10Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at testcore.pages.TradeLicense.isApplicationApproved(TradeLicense.java:149)
at testcore.scenarios.TLFlows.approveTradeLicenseApprover(TLFlows.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveTradeLicenseApprover -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcore.scenarios.TLFlows@180bc464]" name="tearDown" is-config="true" duration-ms="204" started-at="2019-01-04T06:37:10Z" finished-at="2019-01-04T06:37:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=approveTradeLicenseApprover status=FAILURE method=TLFlows.approveTradeLicenseApprover()[pri:0, instance:testcore.scenarios.TLFlows@180bc464] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcore.scenarios.TLFlows -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
